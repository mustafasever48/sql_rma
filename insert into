create procedure sp_product_name
    @BrandFilter nvarchar(50)=null,
    @ModelFilter nvarchar(50)=null,
    @ProductFilter nvarchar(50)=null
    
as
select Brand.Brand_Name,Model.Model_Name,Product.Product_Name
from Product
    join Model on Product.Model_ID=Model.Model_ID
    join Brand on Model.Brand_ID=Brand.Brand_ID
where
        (@BrandFilter is null or Brand.Brand_Name like @BrandFilter)
        and (@ModelFilter is null or Model.Model_Name like @ModelFilter)
	and (@ProductFilter is null or Product.Product_Name like @ProductFilter);
exec sp_product_name
exec sp_product_name @BrandFilter = 'Cisc%';
exec sp_product_name @BrandFilter = 'Cisc%',@ModelFilter = 'ModelX1',@ProductFilter='%Router%';


create procedure sp_rma_count_by_product
as
begin
    select Brand.Brand_Name,Model.Model_Name,Product.Product_Name,
    count(RMA.RMA_ID) as RMACount
    from Product
    join Model on Product.Model_ID=Model.Model_ID
    join Brand on Model.Brand_ID=Brand.Brand_ID
    left join RMA on Product.Product_ID=RMA.Product_ID
    group by Brand.Brand_Name,Model.Model_Name,Product.Product_Name;
end


exec sp_rma_count_by_product;


create procedure sp_rma_count_by_productbyhaving
as
begin
    select Brand.Brand_Name,Model.Model_Name,Product.Product_Name,
    count(RMA.RMA_ID) as RMACount
    from Product
    join Model on Product.Model_ID=Model.Model_ID
    join Brand on Model.Brand_ID=Brand.Brand_ID
    left join RMA on Product.Product_ID=RMA.Product_ID
    group by Brand.Brand_Name,Model.Model_Name,Product.Product_Name
    having count(RMA.RMA_ID)>=1
    order by Brand.Brand_Name
end


exec sp_rma_count_by_productbyhaving



--first function
create function dbo.CalculateRMADuration
    (@StartMaintenanceDate date, @EndMaintanenceDate date)
returns Int
as
begin
    declare @DurationInDays Int;
    set @DurationInDays=datediff(day,@StartMaintenanceDate,@EndMaintanenceDate)
    return @DurationInDays;
end;

--second function

create function dbo.GetRepairDurationForRMA
    (@RMA_ID Int)
returns Int
as
begin
    declare @RepareDuration Int;
    declare @StartMaintenanceDate date;
    declare @EndMaintanenceDate date;
    
    select 
        @StartMaintenanceDate = Inspection_Start_Date,
        @EndMaintenanceDate = Inspection_Completion_Date

    from RMA
    where RMA_ID=@RMA_ID;
    
    if @EndMaintanenceDate is null 
    begin
    print 'Warning: The maintenance process has not been completed.'
    
    set @RepareDuration=dbo.CalculateRMADuration(@StartMaintenanceDate,@EndMaintanenceDate);
    print 'Repair Time (day): ' + convert(nvarchar(10), @RepairDuration);
    return @RepareDuration;
end;

--query
declare @RepareDuration Int;
set @RepareDuration=dbo.CalculateRMADuration(1);

    


create trigger trg_UpdateRMAStatus
on RMA
after insert,update 
as
begin
    set nocount on;
    declare @RMA_ID Int,@Inspection_Start_Date date,@Inspection_Completion_Date date;
    select @RMA_ID=RMA_ID,@Inspection_Start_Date=Inspection_Start_Date,@Inspection_Completion_Date=Inspection_Completion_Date
    from inserted; 
    update RMA
        set RMAStatus = 
        case  
            when @Inspection_Completion_Date is not null then 'Completed'
            when @Inspection_Start_Date is not null then'Started'
            else 'Pending'
        end
    where RMA_ID = @RMA_ID;

    print ('RMA Status Updated');
end;



create trigger trg_CheckWarrantyStatus
on RMA
after insert,update
as
begin
    update RMA
    set Warranty_Status=
        case
            when datediff(year,Product_Sold_Date,getdate())<=2 then 'valid'
            else 'non-valid'
        end
    from RMA
    join Product on RMA.Product_ID=Product.Product_ID
end;